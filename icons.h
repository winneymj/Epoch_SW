
#ifndef _ICONS_H
#define _ICONS_H

#include <stdint.h>
#if ARDUINO >= 100
 #include "Arduino.h"
 #define WIRE_WRITE Wire.write
#else
 #include "WProgram.h"
  #define WIRE_WRITE Wire.send
#endif

//
//  Image data for menu_exit
//
// Bitmap sizes for menu_exit
const uint8_t menu_exitWidthPixels = 32;
const uint8_t menu_exitHeightPixels = 32;
const uint8_t menu_exitBitmaps[] PROGMEM =
{
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x3F, 0xFF, 0xF8, 0x00, //   ###################
  0x7F, 0xFF, 0xFC, 0x00, //  #####################
  0x70, 0x00, 0x1C, 0x00, //  ###               ###
  0x60, 0x00, 0x0C, 0x00, //  ##                 ##
  0x60, 0x00, 0x0C, 0xC0, //  ##                 ##  ##
  0x60, 0x00, 0x0C, 0xE0, //  ##                 ##  ###
  0x60, 0x00, 0x00, 0x70, //  ##                      ###
  0x60, 0x00, 0x00, 0x38, //  ##                       ###
  0x60, 0x00, 0x00, 0x1C, //  ##                        ###
  0x60, 0x00, 0xFF, 0xFE, //  ##             ###############
  0x60, 0x00, 0xFF, 0xFE, //  ##             ###############
  0x60, 0x00, 0x00, 0x1C, //  ##                        ###
  0x60, 0x00, 0x00, 0x38, //  ##                       ###
  0x60, 0x00, 0x00, 0x70, //  ##                      ###
  0x60, 0x00, 0x0C, 0xE0, //  ##                 ##  ###
  0x60, 0x00, 0x0C, 0xC0, //  ##                 ##  ##
  0x60, 0x00, 0x0C, 0x00, //  ##                 ##
  0x70, 0x00, 0x1C, 0x00, //  ###               ###
  0x7F, 0xFF, 0xFC, 0x00, //  #####################
  0x3F, 0xFF, 0xF8, 0x00, //   ###################
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
  0x00, 0x00, 0x00, 0x00, //
};

// 
//  Image data for clock
// 
// Bitmap sizes for clock
const uint8_t clockWidthPixels = 32;
const uint8_t clockHeightPixels = 32;
const uint8_t menu_clockBitmaps[] PROGMEM =
{
  0x00, 0x0F, 0xF0, 0x00, //             ########            
  0x00, 0x7F, 0xFE, 0x00, //          ##############         
  0x00, 0xFF, 0xFF, 0x00, //         ################        
  0x03, 0xF8, 0x1F, 0xC0, //       #######      #######      
  0x07, 0xC0, 0x03, 0xE0, //      #####            #####     
  0x0F, 0x00, 0x00, 0xF0, //     ####                ####    
  0x1E, 0x00, 0x00, 0x78, //    ####                  ####   
  0x1C, 0x01, 0xC0, 0x3C, //    ###         ###        ####  
  0x38, 0x01, 0xC0, 0x1C, //   ###          ###         ###  
  0x78, 0x01, 0xC0, 0x1E, //  ####          ###         #### 
  0x70, 0x01, 0xC0, 0x0E, //  ###           ###          ### 
  0x70, 0x01, 0xC0, 0x0E, //  ###           ###          ### 
  0xF0, 0x01, 0xC0, 0x0F, // ####           ###          ####
  0xE0, 0x01, 0xC0, 0x07, // ###            ###           ###
  0xE0, 0x01, 0xC0, 0x07, // ###            ###           ###
  0xE0, 0x01, 0xFF, 0xC7, // ###            ###########   ###
  0xE0, 0x01, 0xFF, 0xC7, // ###            ###########   ###
  0xE0, 0x01, 0xFF, 0xC7, // ###            ###########   ###
  0xE0, 0x00, 0x00, 0x07, // ###                          ###
  0xF0, 0x00, 0x00, 0x0F, // ####                        ####
  0x70, 0x00, 0x00, 0x0E, //  ###                        ### 
  0x70, 0x00, 0x00, 0x0E, //  ###                        ### 
  0x78, 0x00, 0x00, 0x1E, //  ####                      #### 
  0x38, 0x00, 0x00, 0x1C, //   ###                      ###  
  0x1C, 0x00, 0x00, 0x3C, //    ###                    ####  
  0x1E, 0x00, 0x00, 0x78, //    ####                  ####   
  0x0F, 0x00, 0x00, 0xF0, //     ####                ####    
  0x07, 0xC0, 0x03, 0xE0, //      #####            #####     
  0x03, 0xF8, 0x1F, 0xC0, //       #######      #######      
  0x01, 0xFF, 0xFF, 0x80, //        ##################       
  0x00, 0x7F, 0xFE, 0x00, //          ##############         
  0x00, 0x0F, 0xF0, 0x00, //             ########            
};

// 
//  Image data for invert
// 

// Bitmap sizes for invert
const uint8_t invertWidthPixels = 32;
const uint8_t invertHeightPixels = 32;
const uint8_t menu_invertBitmaps[] PROGMEM =
{
  0x00, 0x0F, 0xF0, 0x00, //             ########            
  0x00, 0x7F, 0xFE, 0x00, //          ##############         
  0x00, 0xFF, 0xFF, 0x00, //         ################        
  0x03, 0xF8, 0x1F, 0xC0, //       #######      #######      
  0x07, 0xC7, 0x83, 0xE0, //      #####   ####     #####     
  0x0F, 0x7F, 0x80, 0xF0, //     #### ########       ####    
  0x1E, 0xFE, 0x00, 0x78, //    #### #######          ####   
  0x1D, 0xFD, 0xC0, 0x3C, //    ### ####### ###        ####  
  0x3B, 0xFD, 0xC0, 0x1C, //   ### ######## ###         ###  
  0x7B, 0xFD, 0xC0, 0x1E, //  #### ######## ###         #### 
  0x77, 0xFD, 0xC0, 0x0E, //  ### ######### ###          ### 
  0x77, 0xFD, 0xC0, 0x0E, //  ### ######### ###          ### 
  0xF7, 0xFD, 0xC0, 0x0F, // #### ######### ###          ####
  0xEF, 0xFD, 0xC0, 0x07, // ### ########## ###           ###
  0xEF, 0xFD, 0xC0, 0x07, // ### ########## ###           ###
  0xEF, 0xFD, 0xFF, 0xC7, // ### ########## ###########   ###
  0xEF, 0xFD, 0xFF, 0xC7, // ### ########## ###########   ###
  0xEF, 0xFD, 0xFF, 0xC7, // ### ########## ###########   ###
  0xEF, 0xFE, 0x00, 0x07, // ### ###########              ###
  0xF7, 0xFF, 0x80, 0x0F, // #### ############           ####
  0x77, 0xFF, 0x80, 0x0E, //  ### ############           ### 
  0x77, 0xFF, 0x80, 0x0E, //  ### ############           ### 
  0x7B, 0xFF, 0x80, 0x1E, //  #### ###########          #### 
  0x3B, 0xFF, 0x80, 0x1C, //   ### ###########          ###  
  0x1D, 0xFF, 0x80, 0x3C, //    ### ##########         ####  
  0x1E, 0xFF, 0x80, 0x78, //    #### #########        ####   
  0x0F, 0x7F, 0x80, 0xF0, //     #### ########       ####    
  0x07, 0xC7, 0x83, 0xE0, //      #####   ####     #####     
  0x03, 0xF8, 0x1F, 0xC0, //       #######      #######      
  0x01, 0xFF, 0xFF, 0x80, //        ##################       
  0x00, 0x7F, 0xFE, 0x00, //          ##############         
  0x00, 0x0F, 0xF0, 0x00, //             ########            
};

// Bitmap sizes for settings
const uint8_t settingsWidthPixels = 32;
const uint8_t settingsHeightPixels = 32;
const uint8_t menu_settingsBitmaps[] PROGMEM =
{
  0x00, 0x00, 0x00, 0xC0, //                         ##     
  0x00, 0x00, 0x04, 0xC8, //                      #  ##  #  
  0x00, 0x00, 0x0F, 0xFC, //                     ########## 
  0x00, 0x00, 0x07, 0xF8, //                      ########  
  0x00, 0x00, 0x07, 0x38, //                      ###  ###  
  0x00, 0x00, 0x1E, 0x1E, //                    ####    ####
  0x00, 0x00, 0x1E, 0x1E, //                    ####    ####
  0x00, 0x00, 0x07, 0x38, //                      ###  ###  
  0x00, 0x00, 0x07, 0xF8, //                      ########  
  0x00, 0x78, 0x0F, 0xFC, //          ####       ########## 
  0x18, 0x78, 0x64, 0xC8, //    ##    ####    ##  #  ##  #  
  0x3C, 0xFC, 0xF0, 0xC0, //   ####  ######  ####    ##     
  0x7F, 0xFF, 0xF8, 0x00, //  ####################          
  0x7F, 0xFF, 0xF8, 0x00, //  ####################          
  0x3F, 0xFF, 0xF0, 0x00, //   ##################           
  0x1F, 0xFF, 0xE0, 0x00, //    ################            
  0x1F, 0xFF, 0xE0, 0x00, //    ################            
  0x3F, 0x87, 0xF0, 0x00, //   #######    #######           
  0xFF, 0x03, 0xFC, 0x00, // ########      ########         
  0xFF, 0x03, 0xFC, 0x00, // ########      ########         
  0xFF, 0x03, 0xFC, 0x00, // ########      ########         
  0xFF, 0x03, 0xFC, 0x00, // ########      ########         
  0x3F, 0x87, 0xF0, 0x00, //   #######    #######           
  0x1F, 0xFF, 0xE0, 0x00, //    ################            
  0x1F, 0xFF, 0xE0, 0x00, //    ################            
  0x3F, 0xFF, 0xF0, 0x00, //   ##################           
  0x7F, 0xFF, 0xF8, 0x00, //  ####################          
  0x7F, 0xFF, 0xF8, 0x00, //  ####################          
  0x3C, 0xFC, 0xF0, 0x00, //   ####  ######  ####           
  0x18, 0x78, 0x60, 0x00, //    ##    ####    ##            
  0x00, 0x78, 0x00, 0x00, //          ####                  
  0x00, 0x00, 0x00, 0x00, //                            
};

#endif

